//- 댓글 작성, 목록화면 추가
//- html template 사용하여 한개의 댓글이 표시될 모양을 선언
table 
    thead 
        tr 
            td(colspan='2')
                input#content(type="text")
            td:button(onclick="writeComment()")
                댓글 작성
    tbody#commnets
template#comment-template
    tr
        td.content
        td.author
        td.createdA


//- fetch로 api 호출하고 처리하기 - 댓글 작성
//- 댓글 작성 버튼 클릭시 writeComment() 실행
//- input#content에서 내용을 읽어 fetch로 댓글 작성 api 호출
//- 호출 결과의 성공 여부를 확인하여, 댓글 다시 불러오기 진행
script 
    fucntion writeComment(){ 
        const input = document.querySelector('#content')
        const content = input.value;
        fetch('/api/posts/#{post.shortId}/comments',{
            method:'post',
            header:{'Content-Type':'application/json'},
            body:JSON.stringify({content}),
        })
        .then(()=>{
            if(res.ok){
                input.value='';
                    loadComments();
            } else{
                alert('error')
            }
            })
        }


//- 댓글 목록 불러오기
script 
    loadComments();
    fucntion loadComments(){ 
        document
            .querySelector('#commnets')
            .innerHTML = '';
        fetch('/api/posts/#{post.shortId}/comments')
            .then((res)=>{
                if(res.ok){
                    return res.json()
                } else {
                    throw new Error('error')
                }
            })
            .then((comments)=>{
                comments.forEach(addComment)
            });
            .catch((err)=> alert(err.meesage))
        }

//- HTML Template 사용하여 댓글 화면에 표시하기
function addComment(comment){
    const template = document.querySelector('#commnet-template');
    const node = document.importNode(template.content,true);
    node.querySelector('.content').textContent = commnet.content
    node.querySelector('.author').textContent = commnet.name 
    node.querySelector('.createdAt').textContent = commnet.createdAt
    document.querySelector('#comments').appendChild(node)
}