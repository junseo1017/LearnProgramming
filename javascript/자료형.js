// 브라우저 콘솔의 작동 방식 
// REPL : 입력 Read, 평가 Eval, 결과 출력 Print, 새로운 입력 반복 Loop

// 자료형(data type) 
// 값(value)은 프로그램이 조작할 수 있는 데이터를 의미. 값에는 여러 종류가 있고 이런 값의 종류를 자료형이라고 함. 

// 자료형의 종류 (콘솔에서 typeof 명령으로 자료형을 알 수 있음)
// 문자열과 숫자
// 문자열 : 문자들이 하나 이상 나열되어 있으면 문자열(따옴표로 감싸야한다)
// 숫자 : 0대신 e를 쓸 수 있고(10000=1e4, 0.01=1e-2, 0b(숫자)는 2진법, 0(숫자)8진법, 0x(숫자)16진법임.
// Nan : Not a Number < 숫자 자료형에 해당함
// 문자<-> 숫자열을 바꾸는 방법은 parseInt(‘124’) > 문자열 124가 숫자 124로 바뀜
// parseInt는 정수로 바꾸는 것 parseFloat은 소수까지 바꿔줌
// prompt() 원하는 값을 입력할 수 있음. 
// parseInt(prompt()); 원하는 값을 입력하고 숫자로 바꿔줌
// 문자열과 숫자를 더할 때는 문자열이 아닌 것이 문자열로 바뀜
// 문자열과 숫자를 뺄 때(곱하기, 나누기, 비교연산자)는 숫자가 아닌 것이 숫자로 바뀜
// 소수를 계산할 때는 *10(or 그 이상)을 해서 계산하고 마지막에 그만큼 다시 나누는 방식을 사용

// 불 값
// 컴퓨터는 1과 0을 사용 이는 true, false로 대응됨. 이 때 이것을 불 값(boolean)이라는 자료형으로 분류함.
// * == 같음을 의미, != 같지 않음을 의미
// NaN == NaN은  false가 출력됨. 같은 값끼리 비교했을 때 false가 출력되는 유일한 경우
// true > false; 는 true가 출력됨
// 문자열끼리 비교가 가능 각 고유의 숫자가 있고 ‘(문자)’.charcodeAt으로 확인 가능
// ==를 사용할 경우 자료형이 다를 때 변환을 한 후 비교. 자료형까지 같은 지 비교하는 연산자가 ===임. 
// !=를 사용할 경우, 형변환이 진행되고 자료형까지 비교할 떄는 !==을 사용한다. 


//논리연산자
// 프로그래밍에서 ‘그리고'라는 것을 표현해주는 연산자가 논리연산자이며 (&&)로 표현함.
// ex) 10은 5보다 크고 그리고 6은 8보다 작다 10 > 5 && 6 <8 로 표현.
// ‘또는'을 표현하는 것이 (||)임.
// 참을 거짓으로, 거짓을 참으로 만드는 연산자는 ‘!’으로 표현
// 다른 자료형을 불 값으로 형 변환하는 표현방식이 ‘!!’임. 
// !!’(값)’ 을 콘솔에 입력하면 불린형으로 변환됨.
// false, ‘ ‘, 0, NaN, undefined, null, document.all 만 false값을 가지고 있으며, 나머지는 모두 true > falsy value와 truty value

// 빈 값
// undefined, null, object, symbol 
// 값이 비어있음을 표현함. 
// undefined은 반환할 결과값이 없을 때 출력됨. 
// null은 빈 값이지만 undefined와는 차이점이 있음 (typeof null;은 “object”로 출력됨) 둘 다 빈 값이지만 undefined는 기본값 null은 역할이 없음.
// 값이 null인지 확인하기 위해서는 === null을 사용해야 함.
