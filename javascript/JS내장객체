자바스크립트 내장 객체
  - 여러 용도에 활용하는 객체를 내장하고 있다.
  - 숫자 다루기, 문자 다루기, 날짜 다루기, JSON 객체 다루기 등 유용한 객체를 제공한다.
  - 핵심 내장 객체들의 기능을 이해하면, 실제 프로젝트에서 유용하게 활용할 수 있다. 


globalThis : 전역 객체를 지칭하는 변수이다. 
  - 전역 객체는 환경에 따라 다르다.
  - 브라우저 환경 window,node환경은 global객체를 지향한다.
  - globalThis는 환경별 차이를 통일하여 하나의 변수로 서로 다른 전역 객체를 가리키게 한다.

window : DOM document를 포함하는 창을 나타내는 객체
  - 전역 스코프에 선언된 변수는 모두 window의 property가 된다.
  - 현재 창의 정보를 얻거나, 창을 조작한다. 
  - 이때 window객체는 globalThis객체와 같아서 대신 사용해도 동일한 결과를 나타낸다.

document : 브라우저에 로드된 웹페이지
  - 문서의 title, URL등의 정보를 얻는다. 
  - element 생성, 검색 등의 기능 제공

function createTodoList(todos){
  return todos
  .map((todo)=>{
    const li = document.createElement('li');
    li.appendChild(document.createTextNode(todo))
    return li
  })
  .reduce((ul,li)=>{
    ul.appendChild(li)
    return ul
  }, document.createElement('ul'))
}

---

Number : 자바스크립트의 number 원시타입(primitive vlaue)을 감싸는 객체
  - 유의미한 상수값, 숫자를 변환하는 메서드 등을 제공한다.
  - 
NaN : Not a Number를 나타내는 객체
  - isNaN() -  전역 함수로, 입력값을 숫자로 변환했을 때 NaN이 되는지를 검사. 
  - 잘못된 입력, 빈 문자열 등의 경우를 처리할 수 있다. 

Math 
  - 기본적인 수학 연산 메서드, 상수를 다루는 객체
  - BigInt 타입과 호환되지 않고, Number 타입만을 인자로 다룬다. 
  - Math.max, Math.min은 개별 숫자를 인자로 받아 각각 최대,최솟값을 리턴한다. 

-----

Date : '특정 시점'의 날짜를 표시하기 위한 객체
   - setDate() 등의 메서드로 시간을 설정한다. 
   - toDateString() 특정 포맷의 문자열 반환
  
주말 구하는 메서드
function isWeekend(today){
  let day = today.getDay();
  return day === 0 || day ===6;
}
console.log(isWeekend(new Date("2021/9/12")));

날짜 더하는 메서드
function addDay(date,days){
  date.setDate(date.getDate()+days)
  return date.toDateString()
}
addDays(new Date("2021/9/22"),100)

흐른 날짜 구하기
function timeDiff(date1, date2){
  return date2.getTime()-date1.getTime()
}
let dayTime = 60 * 24 * 60 * 1000
function fromNow(date){
  let diff = timeDiff(date, new Date())
  return `${Math.floor(diff/dayTime)} days ago`
}
fromNow(new Date("2021/9/1"));

---

String
 - 자바스크립트의 문자열 원시 타입의 래퍼 객체
 - 문자열을 조작하기 위한 여러 메서드를 포함함

String 코드 예시
function toUserList(users){
  return users
  .filter((user)=>!user.includes('c'))
  .map((user)=>user.trim().toUpperCase())
  .map((user)=> `<li>${user}<li>`)
  .join("")
}
console.log(toUserList(['a','b','c'))


JSON : JSON 객체와 관련된 메서드를 담은 객체