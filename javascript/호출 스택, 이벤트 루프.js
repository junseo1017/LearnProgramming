// 함수가 쌓이고 실행되는 과정
// 함수 호출 순서대로 쌓이고, 역순으로 실행됨.
// 함수 실행이 완료되면 스택에서 빠짐
// LIFO 구조라서 스택이라고 불림
// Anonymous는 가상의 전역 컨텍스트
// 호출 스택을 그려보는 연습


// 호출 스택 / 이벤트 루프 / 메모리 / 콘솔창 / 태스크 큐 / 백그라운드
// 백그라운드(비동기)와 호출 스택은 동시에 실행됨.(동시에 실행되더라도 호출 스택이 먼저 처리됨.)
// Promise.the/catch, process.nextTick은 태스크 큐에서 timer와 같은 함수보다 먼저 실행된다. 

// 이벤트 루프 : 이벤트 발생(setTimeout 등)시 호출할 콜백 함수들을 호출할 순서를 결정하는 역할
// 태스크 큐 : 이벤트 발생 후 호출되어야 할 콜백 함수들이 순서대로 기다리는 공간
// 백그라운드 : 타이머나 I/O 작업 콜백, 이벤트 리스너들이 대기하는 공간, 여러 작업이 동시에 실행되고 있음.