// let  변수
// 프로그램을 만들 떄는 잠깐 동안 특정한 값을 저장해야 하는 상황이 자주 발생. 변수를 사용하면 값을 저장할 수 있다. 

let total = 1+1;
// let이라는 명령을 선언문이라고 표현
// total은 변수명
// = 은 할당한다는 의미, 위의 경우 1+1의 값을 total이라는 변수명에 할당함
// 변수를 선언함과 동시에 값을 대입하는 행위를 초기화(initialization라고 함.
// 변수 선언은 항상 결과값이 undefined로 출력(값을 대입하지 않은 변수 >  undefined 출력.) 
// 변수명이 겹치지 않도록 주의
// 변수명은 무엇을 저장했는지 알기 편하도록 작성하기
// 변수명으로 선언할 수 없는 예약어(reservation word)가 있으며 대부분 자바스크립트에서 특정한 기능을 담당하는 단어들이다. 


// 변수는 수정이 가능하다. 
// 예시는 아래와 같음
let total = 1+1;
total = 1+2;
// let total=1+1의 결과값은 undefined지만 total=1+2;의값은 3이 된다. 
// let이 들어가면 선언’문’이 되고 문은 식과 다르게 결과값이 없고, 식의 자리에 사용할 수 없음.
// 변수의 값을 비울 때가 있는데. undefined를 대입하거나, null을 대입한다. null이 주로 사용됨.
total = null;


//변수를 다른 변수에 대입할 수 있음
let number = 5; 
number = number + 3; // 을 입력하면 8이 출력되며 자기 자신에게 변수를 대입할 수 있다.
number += 3; // 위를 간단한 연산자로 표기가능함 위와 같은 원리로 -=, *=, /=, %=, **=
// % : 변수 a, b의 값을 서로 바꿔주기 위해선 제 3의 변수를 생성한 뒤 한 개의 값을 저장하고 바꿔준다.  


//const : 상수(constant)의 줄임말. 변하지 않는 수. 
// const value : 1+1; 이후 변수 수정과 같이 진행해보려고 해도 에러가 발생.
// 진정한 상수의 의미보다는 바뀌는 걸 예방하기 위해 바뀌지 않는 값을 선언하는 것
// 값을 바꿀 수 없다는 특성 때문에 초기화(선언과 동시에 값을 선언)하지 않으면 에러가 발생함.
