실행 컨텍스트(execution context) : 자바스크립트 코드가 실행되는 환경
  - 자바스크립트 엔진은 어떤 코드가 없어도 3가지 변수를 포함한 실행 환경(실행 컨텍스트)를 초기화시킴(만들어냄)
  - 스코프는 코드가 현재 실행되는 환경,맥락(context)을 의미한다. 
    대표적인 환경
      - this : window (코드가 실행되는 시점의 환경에 가르키는 객체 / 글로벌 스코프에서는 window를 가리킨다.) 
      - Variable Objec : {} (변수 선언이 안됐으므로 빈 객체)
      - Scope Chian : [] ()
  - 호출 스택은 실행 컨텍스트가 쌓이면서 만들어짐
  - 함수가 실행되면 함수 스코프에 따라 환경이 만들어짐
  - 스코프 체인을 따라 글로벌 환경에 도달한다. 
  - 객체의 메서드 내의 디스는 객체를 가리킨다. (아닐 수 있음)
  - 실행 컨텍스트는 전역에서 시작해서 함수가 호출될 때 스택에 쌓이게 된다. 

전역 실행 컨텍스트 : 자바스크립트가 실행될 때 만들어진다.
함수 실행 컨텍스트 : 함수가 실행될 때 만들어짐


함수가 호출되는 상황 4가지
 - 함수 호출 : 직접 호출 ex) myFunc();
 - 메서드 호출 : 객체의 메서드를 호출 o.method()
 - 생성자 호출 : 생성자 함수를 호출 const P = new Person();
 - 간접 호출 : call,apply 등으로 함수를 간접 호출 myFunc.call(null,a);
  - call,apply : function객체의 메서드/ this로 사용될 객체를 명시적으로 지정할 수 있음. 
 - 콜백 함수
  - ex) setTimeout에서의 콜백 함수는 전역 함수로 함수의 실행 환경을 바꾼다. 

Dynamic binding : this가 환경에 따라 바뀌는 것.
화살표 함수 : 함수가 생성된 환경
일반 함수 : 함수가 호출된 환경 



* 인터프리터 언어
 - 모든 코드를 한줄한줄 읽어나가며 그때그떄 기계어로 번역해서 실행하는 언어를 말함.
* strict mode
 - 