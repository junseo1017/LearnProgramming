function solution(numbers, hand) {
  var answer = '';
  const pad = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9],
    ['*', 0, '#'],
  ];

  let [leftRi, leftCi] = [3, 0];
  let [rightRi, rightCi] = [3, 2];

  numbers.forEach((e) => {
    if (e === 1 || e === 4 || e === 7) {
      answer += 'L';
      for (let i = 0; i < pad.length; i++) {
        if (pad[i][0] === e) {
          leftRi = i;
          leftCi = 0;
          break;
        }
      }
    } else if (e === 3 || e === 6 || e === 9) {
      answer += 'R';
      for (let i = 0; i < pad.length; i++) {
        if (pad[i][0] === e) {
          rightRi = i;
          rightCi = 0;
          break;
        }
      }
    } else if (e === 2 || e === 5 || e === 8 || e === 0) {
      if (e === 0) e = 11;

      // leftRow, leftCol: 다음에 눌러야 할 번호의 위치
      let [nextRow, nextCol] = [Math.floor((e - 1) / 3), 1];
      // leftDistance: 현재 왼손의 위치와 다음에 눌러야 할 번호의 위치 사이의 거리
      let leftDistance = Math.abs(leftRow - nextRow) + Math.abs(leftCol - nextCol);
      // rightDistance: 현재 오른손의 위치와 다음에 눌러야 할 번호의 위치 사이의 거리
      let rightDistance = Math.abs(rightRow - nextRow) + Math.abs(rightCol - nextCol);

      // 왼손이 다음에 눌러야 할 번호의 위치와 더 가깝거나, 두 손의 거리가 같으면서 왼손잡이라면 왼손으로 눌러야하므로
      if (leftDistance < rightDistance || (leftDistance == rightDistance && hand === 'left')) {
        // 왼손의 위치 업데이트
        [leftRow, leftCol] = [nextRow, nextCol];
        // result 문자열에 "L" 이어붙여줌
        result += 'L';
      }

      // 오른손이 다음에 눌러야 할 번호의 위치와 더 가깝거나, 두 손의 거리가 같으면서 오른손잡이라며 오른손으로 눌러야하므로
      else {
        // 오른손의 위치 업데이트
        [rightRow, rightCol] = [nextRow, nextCol];
        // reuslt 문자열에 "R" 이어붙여줌
        result += 'R';
      }
    }
  });
  console.log(answer);
  return answer;
}
