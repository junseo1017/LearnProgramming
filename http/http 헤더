http 헤더

용도
    - http 전송에 필요한 부가정보
        - 메시지 바디의 내용, 메시지 바디의 크기, 압축, 인증, 요청 클라이언트, 서버 정보, 캐시 관리 정보
    - 표준 헤더의 종류가 많음, 필요시 임의의 헤더 추가 가능

분류
RFC2616(과거)
RFC723x 
    - 메시지 본문을 통해 표현 데이터 전달
    - 메시지 본문 = 페이로드
    - 표현은 요청이나 응답에서 전달할 실제 데이터
    - 표현 헤더는 표현 데이터를 해석할 수 있는 정보 제공
        - 데이터 유형(html,json), 압축 정보 등

---

표현
    - Content-Type: 표현 데이터의 형식
    - Content-Encoding: 표현 데이터의 압축 방식
    - Content-Language: 표현 데이터의 자연 언어
    - Content-Length: 표현 데이터의 길이

Content-Type
: 표현 데이터의 형식 설명
    - 미디어 타입, 문자 인코딩
    - 예시 
        - text/html; charset=urf-8
        - application/json
        - image/png
    
Content-Encoding
    - 표현 데이터를 압축하기 위해 사용
    - 데이터를 전달하는 곳에서 압축 후 인코딩 헤더 추가
    - 데이터를 읽는 쪽에서 인코딩 헤더의 정보로 압축 해제

Content-Language
    - 표현 데이터의 자연 언어를 표현

Content-Length
    - 바이트 단위
    - Transfer-Encoding(전송 코딩)을 사용하면 Content-Length를 사용하면 안됨.

---

협상 (콘텐츠 네고시에이션)
클라이언트가 선호하는 표현 요청
 - Accept : 클라이언트가 선호하는 미디어 타입 전달
 - Accept-Charset: 클라이언트가 선호하는 문자 인코딩
 - Accept-Encoding: 클라이언트가 선호하는 압축 인코딩
 - Accept-Language: 클라이언트가 선호하는 자연 언어
 - 협상 헤더는 요청시에만 사용

협상의 우선순위
Quality Values 
    - Quality Values 값 사용
        - 0~1, 클수록 높은 우선순위
        - 생략하면 1
        - 예시) Accept-Language:ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7
    - 구체적인 것이 우선
    - 구체적인 것을 기준으로 미디어 타입을 맞춤

--- 

전송 방식  
    - 단순 전송
    - 압축 전송
    - 분할 전송
    - 범위 전송

---

일반 정보
    From : 유저 에이전트의 이메일 정보
    Referer : 이전 웹 페이지 주소
        - 현재 요청된 페이지의 이전 웹 페이지 주소
        - A -> B로 이동하는 경우 B를 요청할 때 Referer:A를 포함해서 요청
        - Referer를 사용해서 유입 경로 분석 가능
        - 요청에서 사용
    User-Agent : 유저 에이전트 애플리케이션 정보
        - 클라이언트의 애플리케이션 정보(웹 브라우저 등)
        - 통계 정보
        - 어떤 종류의 브라우저에서 장애가 발생하는지 파악 가능
        - 요청에서 사용
    Server : 요청을 처리하는 ORIGIN 서버의 소프트웨어 정보
        - 응답에서 사용
    Date : 메시지가 발생한 날짜와 시간
        - 응답에서 사용

--- 

특별 정보
    Host : 요청한 호스트 정보(도메인)
        - 요청에서 사용
        - 필수
        - 하나의 서버가 여러 도메인을 처리해야 할 때
        - 하나의 IP 주소에 여러 도메인이 적용되어 있을 때
    
    Location : 페이지 리다이렉션
        - 웹 브라우저는 3xx 응답 결과에 Location 헤더가 있으면, Location 위치로 자동 이동
        - 201(Created) : Location 값은 요청에 의해 생성된 리소스 URI
        - 3xx (Redirection) : Location 값은 요청을 자동으로 리다이렉션하기 위한 대상 리소스를 가리킴
    
    Allow : 허용 가능한 HTTP 메서드
        - 405 코드에서 응답에 포함해야 함.
    
    Retry-After : 유저 에이전트가 다음 요청을 하기까지 기다려야 하는 시간
        - 503 : 서비스가 언제까지 불능인지 알려줄 수 있음.
    
---

인증
    Authorization : 클라이언트 인증 정보를 서버에 전달
    WWW-Authenticate: 리소스 접근 시 필요한 인증 방법 정의
        - 401 Unauthorized 응답과 함께 사용 

---

쿠키 
    Set-Cookie: 서버에서 클라이언트로 쿠키 전달(응답)
    Cookie: 클라이언트가 서버에서 받은 쿠키를 저장하고, HTTP 요청 시 서버로 전달

    http는 무상태 프로토콜
        - 클라이언트와 서버가 요청/응답을 주고 받으면 연결이 끊어짐
        - 클라이언트가 다시 요청하면 서버는 이전 요청을 기억하지 못함
        - 클라이언트와 서버는 서로 상태를 유지하지 않음.
    
    쿠키 미사용 시
        - 모든 요청과 링크에 사용자 정보를 포함되도록 개발해야 하는 문제가 발생
    
    쿠키 사용 시 
        - 요청에서 보낸 데이터를 쿠키에 넣어서 브라우저에 응답
        - 브라우저는 쿠키를 받아서 쿠키 저장소에 저장
        - 이후 모든 요청에 쿠키 정보를 자동으로 포함하여 함께 서버로 보냄 

    쿠키 
        - 사용처
            - 사용자 로그인 세션 관리
            - 광고 정보 트래킹
        - 쿠키 정보는 항상 서버에 전송됨
            - 네트워크 트래픽 추가 유발
            - 최소한의 정보만 사용(세션id, 인증 토큰)
        - 서버에 전송하지 않고, 웹 브라우저 내부에 데이터를 저장하고 싶으면 웹 스토리지 사용
        - 보안에 민감한 데이터는 저장하면 안됨.
    
    쿠키의 생명주기 (expires,max-age)
        - 만료일시를 설정할 수 있음.
        - 세션 쿠키 : 만료 날짜를 생략하면 브라우저 종료시 까지만 유지
        - 영속 쿠키 : 만료 날짜를 입력하면 해당 날짜까지 유지
    
    쿠키 - 도메인
    예시) domain=example.org
        - 명시 : 명시한 문서 기준 도메인+서브 도메인 포함
        - 생략 : 현재 문서 기준 도메인만 적용
