// fs (file system)
// 파일 시스템에 접근하는 모듈
// 파일/폴더 생성, 삭제, 읽기, 쓰기 가능
// 웹 브라우저는 제한적이지만 노드는 권한을 가지고 있음.
// csv excel pdf word 한글을 읽을 수도 있음

// 동기 메서드와 비동기 메서드
// 동기와 비동기 : 백그라운드 작업 완료 확인 여부
// 블로킹과 논 블로킹 : 함수가 바루 return 되는지 여부
// 노드에서는 대부분 동기-블로킹 방식과 비동기-논 블로킹 방식임. 

// 비동기 논-블로킹이 효율적이지만 순서를 맞추는 게 중요함.// 서버가 시작되기 전에는 동기 작업을 해도 되지만 서버가 시작된 후는 비동기로 작업하는 것이 좋음

// 동기로 작업하는 경우는 서버 초기화할 때 딱 한 번식하는 너낌적인 너낌

// 비동기하면서 순서를 유지 
// 비동기를 유지하면서 await같이 동기적으로 보이게 실행하는 것과
// 동기적으로 실행하는 것과는 큰 차이가 있음(동시성)




// 버퍼와 스트림
// 버퍼 : 일정한 크기로 모아두는 데이터
// 일정한 크기가 되면 한 번에 처리
// 버퍼링 : 버퍼에 데이터가 찰 때까지 모으는 작업

// 스트림 : 데이터의 흐름
// 일정한 크기로 나눠서 여러 번에 걸쳐서 처리
// 버퍼(또는 청크)의 크기를 작게 막들어서 주기적으로 데이터를 전달
// 스트리밍 : 일정한 크기의 데이터를 지속적으로 전달하는 작업

// 버퍼 
// 노드에서의 Buffer 객체 사용
// : 대부분 스트림 방식을 사용 메모리를 적게 차지하면서 효율적으로 데이터를 전송할 수 있음

// pipe
// 파이프에 물이 흘러가는 것처럼
// 스트림끼리 파이프를 연결할 수 있음
// 1mb데이터가 전송이 되면 1mb데이터를 조작할 수있음

// 스트림으로 큰 파일 만들기




// 기타 파일 시스템 메서드
// 파일 및 폴더 생성 폴더 수정
// 파일 및 폴더 확인 및 삭제